<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" xmlns:commons="http://commons.apache.org/scxml" xmlns:emma="http://www.w3.org/2003/04/emma" xmlns:mmi="http://www.w3.org/2008/04/mmi-arch" xmlns:schemaLocation="http://www.w3.org/2005/07/scxml scxml.xsd http://commons.apache.org/scxml commons.xsd http://www.w3.org/2008/04/mmi-arch mmi.xsd http://www.w3.org/2003/04/emma emma.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" initialstate="init">
  <datamodel>
    <data name="data1" />
    <data name="data2" />
  </datamodel>
  <state id="init">
    <onentry>
      <log label="[init]" expr="READY" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="main">
    <onentry>
      <log label="[main]" expr="READY" />
    </onentry>
    <transition target="sgestures[gestures][armsx]" event="[GESTURES][ARMSX]" />
    <transition target="sgestures[gestures][push]" event="[GESTURES][PUSH]" />
    <transition target="sspeech[speech][adjust_volume][down]" event="[SPEECH][ADJUST_VOLUME][DOWN]" />
    <transition target="sgestures[gestures][movedown_right]" event="[GESTURES][MOVEDOWN_RIGHT]" />
    <transition target="sgestures[gestures][scratchhead]" event="[GESTURES][SCRATCHHEAD]" />
    <transition target="sspeech[speech][goodbye]" event="[SPEECH][GOODBYE]" />
    <transition target="sspeech[speech][search_music]" event="[SPEECH][SEARCH_MUSIC]" />
    <transition target="sspeech[speech][control_music][resume]" event="[SPEECH][CONTROL_MUSIC][RESUME]" />
    <transition target="sgestures[gestures][earhand]" event="[GESTURES][EARHAND]" />
    <transition target="sspeech[speech][control_music][pause]" event="[SPEECH][CONTROL_MUSIC][PAUSE]" />
  </state>
  <state id="sgestures[gestures][armsx]">
    <onentry>
      <log label="[sgestures[gestures][armsx]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][armsx]" event="timeout-sgestures[gestures][armsx]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="main" event="timeout-sgestures[gestures][armsx]" />
    <transition target="sgestures[gestures][armsx]-speech[speech][goodbye]" event="[SPEECH][GOODBYE]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][armsx]" />
    </onexit>
  </state>
  <state id="sgestures[gestures][armsx]-speech[speech][goodbye]">
    <onentry>
      <log label="[sgestures[gestures][armsx]-speech[speech][goodbye]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="startRequest" expr="${mmi:newStartRequestF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][QUIT]')}" />
      <send event="QUIT" target="IM" targettype="MC" namelist="startRequest" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][push]">
    <onentry>
      <log label="[sgestures[gestures][push]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][push]" event="timeout-sgestures[gestures][push]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="gestures[gestures][push]-final" event="timeout-sgestures[gestures][push]" />
    <transition target="sgestures[gestures][push]-speech[speech][control_music][pause]" event="[SPEECH][CONTROL_MUSIC][PAUSE]" />
    <transition target="sgestures[gestures][push]-speech[speech][control_music][resume]" event="[SPEECH][CONTROL_MUSIC][RESUME]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][push]" />
    </onexit>
  </state>
  <state id="gestures[gestures][push]-final">
    <onentry>
      <log label="[gestures[gestures][push]-final]" expr="READY" />
      <commons:var name="startRequest" expr="${mmi:newStartRequestF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][PUSH]')}" />
      <send event="PUSH" target="IM" targettype="MC" namelist="startRequest" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][push]-speech[speech][control_music][pause]">
    <onentry>
      <log label="[sgestures[gestures][push]-speech[speech][control_music][pause]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="startRequest" expr="${mmi:newStartRequestF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][PAUSE]')}" />
      <send event="PAUSE" target="IM" targettype="MC" namelist="startRequest" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][push]-speech[speech][control_music][resume]">
    <onentry>
      <log label="[sgestures[gestures][push]-speech[speech][control_music][resume]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="startRequest" expr="${mmi:newStartRequestF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][PLAY]')}" />
      <send event="PLAY" target="IM" targettype="MC" namelist="startRequest" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][adjust_volume][down]">
    <onentry>
      <log label="[sspeech[speech][adjust_volume][down]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][adjust_volume][down]" event="timeout-sspeech[speech][adjust_volume][down]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][adjust_volume][down]-final" event="timeout-sspeech[speech][adjust_volume][down]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][adjust_volume][down]" />
    </onexit>
  </state>
  <state id="speech[speech][adjust_volume][down]-final">
    <onentry>
      <log label="[speech[speech][adjust_volume][down]-final]" expr="READY" />
      <commons:var name="startRequest" expr="${mmi:newStartRequestF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][VOLUME_DOWN]')}" />
      <send event="VOLUME_DOWN" target="IM" targettype="MC" namelist="startRequest" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][movedown_right]">
    <onentry>
      <log label="[sgestures[gestures][movedown_right]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][movedown_right]" event="timeout-sgestures[gestures][movedown_right]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="gestures[gestures][movedown_right]-final" event="timeout-sgestures[gestures][movedown_right]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][movedown_right]" />
    </onexit>
  </state>
  <state id="gestures[gestures][movedown_right]-final">
    <onentry>
      <log label="[gestures[gestures][movedown_right]-final]" expr="READY" />
      <commons:var name="startRequest" expr="${mmi:newStartRequestF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][MOVEDOWN_RIGHT]')}" />
      <send event="MOVEDOWN_RIGHT" target="IM" targettype="MC" namelist="startRequest" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][scratchhead]">
    <onentry>
      <log label="[sgestures[gestures][scratchhead]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][scratchhead]" event="timeout-sgestures[gestures][scratchhead]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="main" event="timeout-sgestures[gestures][scratchhead]" />
    <transition target="sgestures[gestures][scratchhead]-speech[speech][help][search_music]" event="[SPEECH][HELP][SEARCH_MUSIC]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][scratchhead]" />
    </onexit>
  </state>
  <state id="sgestures[gestures][scratchhead]-speech[speech][help][search_music]">
    <onentry>
      <log label="[sgestures[gestures][scratchhead]-speech[speech][help][search_music]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="startRequest" expr="${mmi:newStartRequestF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][HELP][SEARCH_MUSIC]')}" />
      <send event="HELP_SEARCH_MUSIC" target="IM" targettype="MC" namelist="startRequest" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][goodbye]">
    <onentry>
      <log label="[sspeech[speech][goodbye]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][goodbye]" event="timeout-sspeech[speech][goodbye]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="main" event="timeout-sspeech[speech][goodbye]" />
    <transition target="sspeech[speech][goodbye]-gestures[gestures][armsx]" event="[GESTURES][ARMSX]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][goodbye]" />
    </onexit>
  </state>
  <state id="sspeech[speech][goodbye]-gestures[gestures][armsx]">
    <onentry>
      <log label="[sspeech[speech][goodbye]-gestures[gestures][armsx]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="startRequest" expr="${mmi:newStartRequestF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][QUIT]')}" />
      <send event="QUIT" target="IM" targettype="MC" namelist="startRequest" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][search_music]">
    <onentry>
      <log label="[sspeech[speech][search_music]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][search_music]" event="timeout-sspeech[speech][search_music]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][search_music]-final" event="timeout-sspeech[speech][search_music]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][search_music]" />
    </onexit>
  </state>
  <state id="speech[speech][search_music]-final">
    <onentry>
      <log label="[speech[speech][search_music]-final]" expr="READY" />
      <commons:var name="startRequest" expr="${mmi:newStartRequestF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][SEARCH_MUSIC]')}" />
      <send event="SEARCH_MUSIC" target="IM" targettype="MC" namelist="startRequest" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][control_music][resume]">
    <onentry>
      <log label="[sspeech[speech][control_music][resume]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][control_music][resume]" event="timeout-sspeech[speech][control_music][resume]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="main" event="timeout-sspeech[speech][control_music][resume]" />
    <transition target="sspeech[speech][control_music][resume]-gestures[gestures][push]" event="[GESTURES][PUSH]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][control_music][resume]" />
    </onexit>
  </state>
  <state id="sspeech[speech][control_music][resume]-gestures[gestures][push]">
    <onentry>
      <log label="[sspeech[speech][control_music][resume]-gestures[gestures][push]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="startRequest" expr="${mmi:newStartRequestF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][PLAY]')}" />
      <send event="PLAY" target="IM" targettype="MC" namelist="startRequest" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][earhand]">
    <onentry>
      <log label="[sgestures[gestures][earhand]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][earhand]" event="timeout-sgestures[gestures][earhand]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="main" event="timeout-sgestures[gestures][earhand]" />
    <transition target="sgestures[gestures][earhand]-speech[speech][adjust_volume][up]" event="[SPEECH][ADJUST_VOLUME][UP]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][earhand]" />
    </onexit>
  </state>
  <state id="sgestures[gestures][earhand]-speech[speech][adjust_volume][up]">
    <onentry>
      <log label="[sgestures[gestures][earhand]-speech[speech][adjust_volume][up]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="startRequest" expr="${mmi:newStartRequestF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][VOLUME_UP]')}" />
      <send event="VOLUME_UP" target="IM" targettype="MC" namelist="startRequest" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][control_music][pause]">
    <onentry>
      <log label="[sspeech[speech][control_music][pause]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][control_music][pause]" event="timeout-sspeech[speech][control_music][pause]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="main" event="timeout-sspeech[speech][control_music][pause]" />
    <transition target="sspeech[speech][control_music][pause]-gestures[gestures][push]" event="[GESTURES][PUSH]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][control_music][pause]" />
    </onexit>
  </state>
  <state id="sspeech[speech][control_music][pause]-gestures[gestures][push]">
    <onentry>
      <log label="[sspeech[speech][control_music][pause]-gestures[gestures][push]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="startRequest" expr="${mmi:newStartRequestF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][PAUSE]')}" />
      <send event="PAUSE" target="IM" targettype="MC" namelist="startRequest" />
    </onentry>
    <transition target="main" />
  </state>
</scxml>
